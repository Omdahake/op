
                                         -----------(ALL 10 MARKS Q)---------------
Q1)Write the definition for a class Cylinder that contains data members radius and height. The class has the following member functions:a. void setradius(float) to set the radius of data member.b. void setheight(float) to set the height of data member.c. float volume( ) to calculate and return the volume of the cylinder.Write a C++ program to create cylinder object and display its volume.
==>#include<iostream.h>
Using namespace std;
class Cylinder {
  private:
    float radius;
    float height;

  public:
    void setradius(float r) {
        radius = r;
    }

    void setheight(float h) {
        height = h;
    }

    float volume() {
        return 3.14 * radius * radius * height;
    }
};
int main() {
    Cylinder cyl;
    float r, h;
    cout << "Enter radius: ";
    cin >> r;
    cout << "Enter height: ";
    cin >> h;
    cyl.setradius(r);
    cyl.setheight(h);
    cout << "Volume of the cylinder is " << cyl.volume() << endl;
    return 0;
}
**********************************************************************************************************************************
Q2)write a c++ program to overload a function volume and find volume fo cube,cylinder and sphere 
==>
#include <iostream>
using namespace std;	

const float PI = 3.14159265358979323846;

class Volume {
public:
    // Function to calculate volume of a cube
    float volume(float side) {
        return side * side * side;
    }

    // Function to calculate volume of a cylinder
    float volume(float radius, float height) {
        return PI * radius * radius * height;
    }

    // Function to calculate volume of a sphere
    float volumeSphere(float radius) {
        return 4.0 / 3.0 * PI * radius * radius * radius;
    }
};

int main() {
    Volume vol;
    float side, radius, height;

    // Calculate volume of a cube
    cout << "Enter the length of the side of the cube: ";
    cin >> side;
    cout << "Volume of the cube is " << vol.volume(side) << endl;

    // Calculate volume of a cylinder
    cout << "Enter the radius of the cylinder: ";
    cin >> radius;
    cout << "Enter the height of the cylinder: ";
    cin >> height;
    cout << "Volume of the cylinder is " << vol.volume(radius, height) << endl;

    // Calculate volume of a sphere
    cout << "Enter the radius of the sphere: ";
    cin >> radius;
    cout << "Volume of the sphere is " << vol.volumeSphere(radius) << endl;

    return 0;
}

**********************************************************************************************************************************
Q3).write a C++ program to accept breadth and length of rectangle calculate and display perimeter as well as  area of rectangle by using inline function
==>
#include <iostream>
using namespace std;

inline float calcArea(float length, float breadth) {
    return length * breadth;
}

inline float calcPerimeter(float length, float breadth) {
    return 2 * (length + breadth);
}

int main() {
    float length, breadth;
    cout << "Enter length of rectangle: ";
    cin >> length;
    cout << "Enter breadth of rectangle: ";
    cin >> breadth;	
    cout << "Area of rectangle is " << calcArea(length, breadth) << endl;
    cout << "Perimeter of rectangle is " << calcPerimeter(length, breadth) << endl;
    return 0;
}

*********************************************************************************************************************************
Q4).Write a C++ program to create two classes Rectangle1 and Rectangle2. Compare area of both the
rectangles using friend function
==>
#include <iostream>
using namespace std;

class Rectangle2; // forward declaration

class Rectangle1 {
    private:
        int length;
        int width;
    public:
        Rectangle1(int l, int w) {
            length = l;
            width = w;
        }
        int area() {
            return length * width;
        }
        friend void compare(Rectangle1 r1, Rectangle2 r2);
};

class Rectangle2 {
    private:
        int length;
        int width;
    public:
        Rectangle2(int l, int w) {
            length = l;
            width = w;
        }
        int area() {
            return length * width;
        }
        friend void compare(Rectangle1 r1, Rectangle2 r2);
};

void compare(Rectangle1 r1, Rectangle2 r2) {
    int area1 = r1.area();
    int area2 = r2.area();
    if (area1 > area2) {
        cout << "Rectangle 1 has a greater area than Rectangle 2" << endl;
    } else if (area1 < area2) {
        cout << "Rectangle 2 has a greater area than Rectangle 1" << endl;
    } else {
        cout << "Both rectangles have the same area" << endl;
    }
}

int main() {
    Rectangle1 r1(3, 4);
    Rectangle2 r2(5, 6);
    compare(r1, r2);
    return 0;
}
**********************************************************************************************************************************
Q5)write c++ program to create class item with data member item code, item name, Item price, write member function to accept and display number of objects created for a class (use static data member & function)
==>
#include<iostream>
#include<string>
using namespace std;
class item{
    private:
    int item_code;
    string item_name;
    int item_price;
    static int count;
    public:
    item(int icode,string n,int iprice)
    {
        item_code=icode;
        item_name=n;
        item_price=iprice;
        count++;
    }
    void display()
    {
        cout<<"item_code "<<item_code<<endl;
        cout<<"item_name "<<item_name<<endl;
        cout<<"item_price "<<item_price<<endl;
        cout<<"\n\n"<<endl;
    }
    static int getcount()
    {
        return count;
    }

};

int item::count=0;

int main()
{
    item item1(101,"om",3);
    item item2(102,"surya",5);
    item item3(103,"raju",7);

    item1.display();
    item2.display();
    item3.display();

    int total_item=item::getcount();
    cout<<"total number of items created :"<<total_item<<endl;

    return 0;
}
**********************************************************************************************************************************
Q6).Write a C++ program to subtract two integer numbers of two different classes using friend
Function
==>#include <iostream>
using namespace std;

class ClassB;

class ClassA {
    private:
        int numA;
    public:
        ClassA(int a) {
            numA = a;
        }
        friend int subtract(ClassA a, ClassB b); // declare friend function
};

class ClassB {
    private:
        int numB;
    public:
        ClassB(int b) {
            numB = b;
        }
        friend int subtract(ClassA a, ClassB b); // declare friend function
};	

// Define the friend function to subtract numA and numB
int subtract(ClassA a, ClassB b) {
    return (a.numA - b.numB);
}

int main() {
    ClassA objA(10);
    ClassB objB(5);
    int result = subtract(objA, objB);
    cout << "Result of subtraction: " << result << endl;
    return 0;
}
********************************************************************************************************************************
Q7)write a c++ program to implement a class "printdata" to overload "print" function as follows:
Void print(int)-output value followed by the value of the integer
Eg-print(10) output-value 10
Void print(char*)-output follwed by string in double quotes
Eg-print(“hi”) output value “hi”
==>
#include <iostream>
using namespace std;

class PrintData {
    public:
        void print(int num) {
            cout << "output-value " << num << endl;
        }
        void print(char* str) {
            cout << "output-value \"" << str << "\"" << endl;
        }
};

int main() {
    PrintData obj;
    obj.print(10);
    obj.print("hi");
    return 0;
}
*********************************************************************************************************************************
Q8)write a c++ program to calculate following series (1)+ (1+2)+ (1+2+3)+ 
(1+2+3+4)+......... (1 +2+ 3+4 +... +n)
==>#include <iostream>
#include <cmath>
using namespace std;

int main() {
    int n;
    cout << "Enter the number of terms: ";
    cin >> n;
    int sum = n*(n+1)*(n+2)/6; // calculate the sum using the formula
    cout << "The sum of the series is: " << sum << endl;
    return 0;
}
**********************************************************************************************************************************
Q9)write c++ program to check minimum and maximum of two integer number (use inline function and conditional operaror)
==>#include <iostream>
using namespace std;
inline int Min(int a,int b)
{
  return a>b?b:a;
}
inline int Max(int a,int b)
{
    return a>b?a:b;
}

int main()
{
    int n1,n2;
    cout<<"Enter the two numbers\n";
    cin>>n1>>n2;
    cout<<"\nmimum is "<<Min(n1,n2)<<endl;
    cout<<"\nMaximum is "<<Max(n1,n2)<<endl;

    return 0;
}
**********************************************************************************************************************************
Q10)Write a C++ program to create a class number which contains two integer data member. Create and initialize the object by using default constructor, parameterized constructor. Write a member function to display maximum from a given two numbers for all objects.
==>#include <iostream>
using namespace std;

class number{
    private:
    int num1;
    int num2;
    public:
    number()
    {
        num1=0;
        num2=0;
    }
    number(int a,int b)
    {
        num1=a;
        num2=b;
    }
    void displayMax()
    {
        int max=num1>num2?num1:num2;
        cout<<"max out of "<<num1<<" and "<<num2<<" is "<<max<<endl;

    }
};

int main()
{
    number n1;
    number n2(4,8);
    number n3(5,76);

    n1.displayMax();
    n2.displayMax();
    n3.displayMax();

    return 0;
}
***********************************************************************************************************************************
Q11)Write a C++ program to sort integer and float array elements in ascendin order by using function overloading
==>#include<iostream>
#include<algorithm>
using namespace std;

void sort(int array[],int size)
{
    sort(array,array+size);
}
void sort(float array[],int size)
{
    sort(array,array+size);
}

int main()
{
    int intarray[]={5,3,4,8,9,2};
    float floatarray[]={2.3,4.5,7.8,1.2,9.0};

    int intsize=sizeof(intarray)/sizeof(int);
    int floatsize=sizeof(floatarray)/sizeof(float);
    sort(intarray,intsize);
    sort(floatarray,floatsize);

    cout<<"sorted integer array:"<<endl;
    for(int i=0;i<intsize;i++)
     cout<<intarray[i]<<" ";

     cout<<"\nsorted float array:"<<endl;
     for(int i=0;i<floatsize;i++)
     cout<<floatarray[i]<<" ";

     return 0;
}
**********************************************************************************************************************************
Q12)Write a C++ program to interchange values of two integer numbers(use call by reference)
==>: #include<iostream>
           using namespace std;
           void swapr(int &p, int &q)
           {
           int dummy;
           dummy = p;
          p = q;
          q = dummy;
          }
         int main()
         { 
          int x=150, y=300;
          cout<<x<<”\t”<<y<<endl;
          swapr(x, y);
          cout<<”After swap”<<endl;
          cout<<x<<”\t”<<y;
          }
*********************************************************************************************************************************
Q13).Write a C++ program to print area of circle, square and rectangle using inline function
==>#include<iostream>
using namespace std;
const float PI =3.14;
inline float areaofcircle(float radius)
{
    return PI*radius*radius;
}
inline float areaofsquare(float side)
{
    return side*side;
}
inline float areaofrectangle(float length,float breadth)
{
    return length*breadth;
}
int main()
{
    float radius,side,length,breadth;
    cout<<"Enter the radius of a circle: ";
    cin>>radius;
    cout<<"Enter the side of the square: ";
    cin>>side;
    cout<<"Enter the length and breadth of rectangle: ";
    cin>>length>>breadth;

    cout<<"Area of circle: "<<areaofcircle(radius)<<endl;
    cout<<"Area of square: "<<areaofsquare(side)<<endl;
    cout<<"Area of rectangle: "<<areaofrectangle(length,breadth)<<endl;

    return 0;
}
**********************************************************************************************************************************
Q14)Write C++ program to create class mobile which contain data member as mobile_id mobile_name mobile_price. Create and initialize all values of mobile object by using parameterizes constructor. Display value of mobile object.
==>#include <iostream>
using namespace std;
class Mobile {
  private:
    int mobile_id;
    string mobile_name;
    float mobile_price;
  
  public:
    Mobile(int id, string name, float price) {
      mobile_id = id;
      mobile_name = name;
      mobile_price = price;
    }
    
    void display() {
      cout << "Mobile ID: " << mobile_id << endl;
      cout << "Mobile Name: " << mobile_name << endl;
      cout << "Mobile Price: " << mobile_price << endl;
    }
};

int main() {
  Mobile m(123, "Samsung Galaxy S20", 999.99);
  m.display();
  return 0;
}
**********************************************************************************************************************************
Q15)Write a c++ program to create class employee containing salary as a data member . Write necessary members function to overload the operator unary pre and post decrement “__” for decrementing salary
==>#include <iostream>
using namespace std;

class Employee {
private:
    int salary;
public:
    Employee(int s) : salary(s) {} // constructor to initialize salary
    void printSalary() {
        cout << "Salary: " << salary << endl;
    }
    Employee operator--() { // unary pre-decrement operator overload
        --salary;
        return *this;
    }
    Employee operator--(int) { // unary post-decrement operator overload
        Employee temp = *this;	
        --salary;
        return temp;
    }
};

int main() {
    Employee emp1(5000);
    emp1.printSalary(); // output original salary
    --emp1; // pre-decrement salary
    emp1.printSalary(); // output new salary
    emp1--; // post-decrement salary
    emp1.printSalary(); // output new salary
    return 0;
}
*********************************************************************************************************************************
Q16)write a c++ program to read two float  number perform arithmetic binary operator +,-,*,/ on these number using inline function display the resultant value
==>#include <iostream>
using namespace std;
inline float add(float x, float y) 
{
    return x + y;
       }
inline float subtract(float x, float y)
 {
    return x - y;
}
inline float multiply(float x, float y)
 {
    return x * y;
}
inline float divide(float x, float y) 
{
    return x / y;
}
int main() 
{
    float num1, num2;
    cout << "Enter two float numbers: ";
    cin >> num1 >> num2;
  cout << num1 << " + " << num2 << " = " << add(num1, num2) << endl;
  cout << num1 << " - " << num2 << " = " << subtract(num1, num2) << endl;
    cout << num1 << " * " << num2 << " = " << multiply(num1, num2) << endl;
    cout << num1 << " / " << num2 << " = " << divide(num1, num2) << endl;
   return 0;
}
**********************************************************************************************************************************
Q17)write a c++ program to implement a class  student to overload following function a)int maximum(int,int)  b)int maximum(int *a,int arraylength)
==>
#include <iostream>
using namespace std;

class Student {
public:
    int maximum(int a, int b) {
        return (a > b) ? a : b;
    }
    
    int maximum(int* a, int arrayLength) {
        int maxVal = a[0];
        for(int i = 1; i < arrayLength; i++) {
            if(a[i] > maxVal) {
                maxVal = a[i];
            }
        }
        return maxVal;
    }
};

int main() {
    Student s;
    
    // Test the first function
    int num1 = 5, num2 = 10;
    int max1 = s.maximum(num1, num2);
    cout << "The maximum of " << num1 << " and " << num2 << " is " << max1 << endl;
    
    // Test the second function
    int arr[] = {3, 5, 2, 7, 1};
    int size = sizeof(arr) / sizeof(arr[0]);
    int max2 = s.maximum(arr, size);
    cout << "The maximum value in the array is " << max2 << endl;
    
    return 0;
}
**********************************************************************************************************************************
Q18). Write a c++ program wing class which contain two data member as type integer, create and initalize the object wing default constructer , parameterized constructor with default value. write a member function to display maximum from given two number for all objects.
#Include <iostream>
Using namespace std;
class Wing 
{
private:
    int num1;
    int num2;
public:
    Wing() 
    {
        num1=0;
        num2=0;
    {
    Wing(int n1=0,int n2=0)
    {
        num1 = n1;
        num2 = n2;
    }
    void displayMaximum()
    {
        int maxNum = (num1 > num2) ? num1 : num2;
        std::cout << "Maximum: " << maxNum << std::endl;
    }
};

int main() 
{
    
    Wing wing1(30,10);                
    Wing wing2(10, 20);          

    
    wing1.displayMaximum();
    wing2.displayMaximum();

    return 0;
}
********************************************************************************************************************************


